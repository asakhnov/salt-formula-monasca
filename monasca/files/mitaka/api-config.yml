{%- from "monasca/map.jinja" import monasca with context -%}
# The region for which all metrics passing through this server will be persisted
region: "{{ monasca.identity.region }}"

# Maximum rows (Mysql) or points (Influxdb) to return when listing elements
maxQueryLimit: 10000

# Whether this server is running on a secure port
accessedViaHttps: false

# Topic for publishing metrics to
metricsTopic: metrics

# Topic for publishing domain events to
eventsTopic: events

kafka:
  brokerUris:
{%- for member in monasca.kafka.members %}
    - "{{ member.host }}:{{ member.get('port', 9092) }}"
{%- endfor %}
  zookeeperUris:
{%- for member in monasca.zookeeper.members %}
    - "{{ member.host }}:{{ member.get('port', 2181) }}"
{%- endfor %}
  healthCheckTopic: healthcheck

mysql:
  driverClass: com.mysql.jdbc.Driver
  url: jdbc:mysql://{{ monasca.mysql.host }}:3306/{{ monasca.mysql.name }}?connectTimeout=5000&autoReconnect=true&useLegacyDatetimeCode=false
  user: {{ monasca.mysql.user }}
  password: {{ monasca.mysql.password }}
  maxWaitForConnection: 1s
  validationQuery: "/* MyService Health Check */ SELECT 1"
  minSize: 8
  maxSize: 32
  checkConnectionWhileIdle: false
  checkConnectionOnBorrow: true

databaseConfiguration:
  databaseType: influxdb

influxDB:
  maxHttpConnections: 100
  # Retention policy may be left blank to indicate default policy.
  retentionPolicy:
  gzip: true
  name: "{{ monasca.influxdb.name }}"
  url: "http://{{ monasca.influxdb.host }}:8086"
  user: "{{ monasca.influxdb.user }}"
  password: "{{ monasca.influxdb.password }}"

vertica:
  driverClass: com.vertica.jdbc.Driver
  url: jdbc:vertica://{{ monasca.vertica.host }}/{{ monasca.vertica.name }}
  user: "{{ monasca.vertica.user }}"
  password: "{{ monasca.vertica.password }}"
  maxWaitForConnection: 1s
  validationQuery: "/* MyService Health Check */ SELECT 1"
  minSize: 4
  maxSize: 32
  checkConnectionWhileIdle: false

middleware:
  enabled: true
  serverVIP: "{{ monasca.identity.host }}"
  serverPort: 5000
  useHttps: false
  #truststore: "None"
  #truststorePass: "None"
  connTimeout: 500
  connSSLClientAuth: false
  #keystore: "None"
  #keystorePass: "None"
  connPoolMaxActive: 3
  connPoolMaxIdle: 3
  connPoolEvictPeriod: 600000
  connPoolMinIdleTime: 600000
  connRetryTimes: 2
  connRetryInterval: 50
  defaultAuthorizedRoles: [user, domainuser, domainadmin, monasca-user]
  agentAuthorizedRoles: [monasca-agent]
  adminAuthMethod: password
  adminUser: "{{ monasca.identity.user }}"
  adminPassword: "{{ monasca.identity.password }}"
  adminProjectId:
  adminProjectName:
  adminUserDomainId: default
  adminUserDomainName:
  adminProjectDomainId: default
  adminProjectDomainName:
  adminToken: "{{ monasca.identity.admin_token }}"
  timeToCacheToken: 600
  maxTokenCacheSize: 1048576

server:
  applicationConnectors:
    - type: http
      bindHost: {{ monasca.api.bind.host }}
      port: {{ monasca.api.bind.port }}
      maxRequestHeaderSize: 16KiB  # Allow large headers used by keystone tokens
  requestLog:
   timeZone: UTC
   appenders:
    - type: file
      currentLogFilename: /var/log/monasca/api/request.log
      threshold: ALL
      archive: true
      archivedLogFilenamePattern: /var/log/monasca/api/request-%d.log.gz
      archivedFileCount: 5

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
{%- if monasca.api.debug %}
  level: DEBUG
{%- elif monasca.api.verbose %}
  level: INFO
{%- else %}
  level: WARN
{%- endif %}

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG

  appenders:
    - type: console
      threshold: ALL
      timeZone: UTC
      target: stdout
      logFormat: # TODO

    - type: file
      currentLogFilename: /var/log/monasca/api/monasca-api.log
      threshold: ALL
      archive: true
      archivedLogFilenamePattern: /var/log/monasca/api/monasca-api-%d.log.gz
      archivedFileCount: 5
      timeZone: UTC
      logFormat: # TODO

    - type: syslog
      host: localhost
      port: 514
      facility: local0
      threshold: ALL
      logFormat: # TODO
